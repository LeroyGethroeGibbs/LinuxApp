#: import ListItemButton kivy.uix.listview.ListItemButton
#: import ListAdapter kivy.adapters.listadapter.ListAdapter
#: import Accordion kivy.uix.accordion.Accordion
#: import AccordionItem kivy.uix.accordion.AccordionItem
#: import ViewProjectFormTemplate Form1.ViewProjectFormTemplate
#: import JsonStore kivy.storage.jsonstore.JsonStore
#: import Form1 Form1
#: import runTouchApp kivy.base.runTouchApp

#:import datetime datetime
#:import time time

<MySlide@Slider>:
    bar_color: (0,0,0,0)
    canvas.before:

        Rectangle:
            source: 'colorbar.png'
            pos: self.x, self.y
            size: self.width, self.height/2
    Label:
        id: score_label
        pos: (root.value_pos[0] - sp(16), root.center_y + sp(10)) if root.orientation == 'horizontal' else (root.center_x - sp(27), root.value_pos[1] - sp(16))
        size_hint: None, None
        size: sp(32), sp(32)
        text: str(int(root.value))
        font_size: 15

        color: [146.0/255, 238.0/255, 138.0/255, 255.0/255]

<OpenExistingProject>:

<TabbedPanelTemplate>:
    title_label: 'Funct'
    text: 'Functionality'
    id: yes
    font_size: 11
    BoxLayout:
        orientation: 'vertical'
        padding: 30,0,30,10
        Label:
            text: 'Motor Mount Repair'
            color: (0,1,1,1)
            size_hint_y: .1
        Label:
            id: title_label_category
            text: root.title_label
            font_size: 30
            color: (.4,.6,1,1)
            italic: True
            size_hint_y: .15
        Button:

            #background_normal: 'question_mark.jpg'
            text: ' ? '
            allow_stretch: True
            keep_ratio: False
            size_hint: .1,.1
            pos: self.pos
            border: 1,1,1,1
            on_press: Poppy()
        GridLayout:
            cols: 2
            spacing: 30
            BoxLayout:
                orientation: 'vertical'

                Label:
                    text: 'Design Requirement'
                    size_hint_y: None
                    height: '35dp'

                ScrollView:
                    id: sv
                    TextInput:
                        id: DR_F
                        size_hint_y: None
                        height: max(self.minimum_height, sv.height)
                        multiline: True
                        focus: True
            BoxLayout:
                orientation: 'vertical'
                Label:
                    text: 'Design Requirement Rationale'
                    size_hint_y: None
                    height: '35dp'
                ScrollView:
                    id: sv2
                    height: '50dp'
                    TextInput:
                        id: DRR_F
                        size_hint_y: None
                        height: max(self.minimum_height, sv2.height)
                        multiline: True

            Label:
                size_hint_y: .3
                markup: True
                text: 'Design Requirement [ref=some]Importance Score[/ref]'
                on_ref_press:
                    import webbrowser
                    webbrowser.open('http://google.com')
            MySlide:
                id: DRIS_F
                size_hint_y: None
                height: '10dp'
                min: 1
                max: 4
                step: 1


        BoxLayout:
            orientation: 'vertical'
            padding: (120,0)

            Label:
                text:'Design Requirement Importance Score Rationale'
                size_hint_y: None
                height: '35dp'

            TextInput:
                id: DRISR_F
                size_hint_y: None
                height: '100dp'
                multiline: True
                size: self.size
            Button:
                #on_press: dropdown.open

                on_press: app.root.store_stuff()
                #on_press: app.root.show_new_project_form()
            Button:
                id: spit
                text: 'spit'
                on_press: yes.color= [0,1,0,1]; #Form1App().spit_store(yes.text, DR_F.text, DRR_F.text, DRIS_F.value, DRISR_F.text)


            Label:
                id: spit_label
                text: 'status'
#:import DefineProposedDesignSolution Form1.DefineProposedDesignSolution
<DesignSolutionTemplate>:

    title_label: 'Title Label'
    text: 'Functionality'
    id: yes2
    font_size: 11
    BoxLayout:
        orientation: "vertical"

        Label:
            text: 'Step 1 – Translating Needs into Design Requirements'
            color: .6,.5,.6,1
            font_size: 11
            size_hint_y: .1
        BoxLayout:
            orientation: 'vertical'
            padding: 30,5,30,10
            size_hint_y: 2
    ## ## ## ## Step 1 – Translating Needs into Design Requirements ## ## ## ##
            BoxLayout:
                size_hint_y: 2
                orientation: 'vertical'
                spacing: 10,5
                padding: 2,2,2,2
                canvas.before:
                    Color:
                        rgba: .5,.4,.6,.7   # purple box
                    Rectangle:
                        id: purpleborder
                        pos: self.pos
                        size: self.size
                BoxLayout:
                    orientation: 'vertical'
                    padding: 15,0,15,15
                    canvas.before:
                        Color:
                            rgba: 1,1,1,1   #black inital canvas for base
                        Rectangle:
                            pos: self.pos
                            size: self.size
                    canvas:
                        Color:
                            rgba: 0,0,0,.8
                        Rectangle:
                            pos: self.pos
                            size: self.size


                    Label:
                        text: 'Design Requirement Compliance Basis'
                        markup: True
                        size_hint_y: .5
                    TextInput:
                        font_size: 12
                        id: _DRCB
                        multiline: True
                        focus: True
                        size_hint_x: .60
                        pos_hint:  {'center_x': .5, 'center_y': .5}


                    GridLayout:
                        cols: 2
                        spacing: 25,0
                        Label:
                            text: 'Possible Design \nSolution Advantages'
                            halign: 'center'

                        Label:
                            markup: True
                            text: 'Possible Design\n Solution Constraints'
                            halign: 'center'

                        TextInput:
                            id: _PDSA
                            multiline: True
                            font_size: 12

                        TextInput:
                            id: _PDSC
                            multiline: True
                            font_size: 12
## ## ## ## Step 2 – Prioritizing Design Requirements ## ## ## ##

##          ##          ##          ##          ##          ##
        Label:
            text: 'Step 2 – Prioritizing Design Requirements'
            color: .6,.5,.6,1
            font_size: 11
            size_hint_y: .1
        BoxLayout:
            orientation: 'vertical'
            padding: 30,5,30,10
            size_hint_y: 1.5

            BoxLayout:
                size_hint_y: 2
                orientation: 'vertical'
                spacing: 10,5
                padding: 2,2,2,2
                canvas.before:
                    Color:
                        rgba: .5,.4,.6,.7   # purple box
                    Rectangle:
                        id: purpleborder
                        pos: self.pos
                        size: self.size
                BoxLayout:
                    orientation: 'vertical'
                    padding: 15,0,15,15
                    canvas.before:
                        Color:
                            rgba: 1,1,1,1   #black inital canvas for base
                        Rectangle:
                            pos: self.pos
                            size: self.size
                    canvas:
                        Color:
                            rgba: 0,0,0,.8
                        Rectangle:
                            pos: self.pos
                            size: self.size

                    GridLayout:
                        cols: 2
                        Label:
                            markup: True
                            text: 'Possible Design\n Solution Compliance Score'

                        MyCheckBox:

                            id: _PDSCS
                        Label:
                            text:'Possible Design Solution Value'
                        BoxLayout:
                            Label:
                                text: '#'
                                id: _PDSV

        BoxLayout:
            size_hint_y: .3
            spacing: 20
            padding: 5,0,25,5
            Button:
                size_hint_y: 1.2
                Label:
                    text: ''
            BoxLayout:
                Button:

                    text: 'Save'

                Button:

                    text: 'Submit All'
                   # on_press:root.form2_store(yes2.text, _DRCB.text, _PDSA.text, _PDSC.text, 4, _PDSV.text)

<MyCheckBox>:
    #on_checkbox_active: print 'fg'

    cols: 4

    Label:
        text: '4'

    Label:
        text: '3'

    Label:
        text: '2'
    Label:
        text: '1'
    CheckBox:
        group: 'val'
#        active: root.on_checkbox_active
       # on_active: app.root.abc(4)
#        on_active: id._PDSV.text = 'four'
    CheckBox:
        #on_active: app.root.abc(3)
        group: 'val'
#        on_active: root.ids._PDSV.text = 'three'
    CheckBox:
        group: 'val'
#        on_active: root.ids._PDSV.text = 'two'
    CheckBox:
        group: 'val'
#        on_active: root.ids._PDSV.text = 'one'

<RootHome>:

        #DefineDesignRequirements
    LoginPage:
    #ViewProjectFormTemplate


#:import DesignSolutionHelpContent Form1.DesignSolutionHelpContent

<Words@RstDocument>:
    text: "Welcome\n--------------------------------\nThis introduction will explain why stuff happens with things"



<DesignSolutionHelpContent>:
    size_hint_x: .3
    RstDocument:
        source: 'rst/designsolution_helpcontent.rst'
<DefineProposedDesignSolution>:
    do_default_tab: False

    DesignSolutionTemplate:
        title_label: 'Functionality'
        title_label: self.text
        id: tab1
    DesignSolutionTemplate:
        id: tab2
        text: 'Operational \nEnvironment'
    DesignSolutionTemplate:
        id: tab3
        text: 'Health, Safety, \nand Environment'
    DesignSolutionTemplate:
        text: 'Manageability'
    DesignSolutionTemplate:
        text: 'Security'
    DesignSolutionTemplate:
        text: 'Interfacing \nSystems'

    TabbedPanelItem:
        text: 'Form 3'
        GridLayout:
            cols: 2
            Label:
                text: 'PDS RP'
            MySlide:
            Label:
                text: 'Rationale for Required Proficiency Level'
            TextInput:
            Label:
                text: 'PDS RP&E'
            MySlide:
            Label:
                text: 'Rationale for Required Planning and Execution Level'
            TextInput:
            Label:
                text: 'PDS RI'
            MySlide:
            Label:
                text: 'Rationale for Required Innovation'
            TextInput:


<DesignRequirementsHelpContent>:     #Step 1 – Translating Needs into Design Requirements
<DefineDesignRequirements>:             #Step 2 – Prioritizing Design Requirements
    do_default_tab: False
# # # # #D#R#_#F#:# #'#'#
# # # # #D#R#R#_#F#:# #'#'#
# # # # #D#R#I#S#_#F#:# #0#
# # # # #D#R#I#S#R#_#F#:# #'#'
    TabbedPanelTemplate:
        title_label: 'Functionality'

    TabbedPanelTemplate:

        text: 'Operational \nEnvironment'

#            canvas:
#
#                Rectangle:
#                    source: 'checks.png'
#                    size: self.width * (1.0/5), self.height *(1.0/3)
#                    pos: self.pos

        title_label: self.text

    TabbedPanelTemplate:
        text: 'Health, Safety, \nand Environment'
        title_label: self.text

    TabbedPanelTemplate:
        text: 'Manageability'
        title_label: self.text

    TabbedPanelTemplate:
        text: 'Security'
        title_label: self.text

    TabbedPanelTemplate:
        text: 'Interfacing \nSystems'
        title_label: self.text


<LoginPage>:
    un_input: un_input
    pw_input: pw_input
    canvas.before:
        Color:
            rgba: 1,1,1,1
        Rectangle:
            source:'rst/ocean.jpg'
            size: self.size
            pos: self.pos
##@ AnchorLayout
    GridLayout:
        id: glay
        size_hint: .5,.2
        spacing: '10dp'
        cols:2
        Label:
            text: 'Username'
            id: un_label
            size: un_input.size
        TextInput:
            id: un_input
            multiline: False
            focus: True
            focus: root.on_focus
           # on_text_validate: root.ids.un_label.text = ' in the books'
            on_text_validate: root.on_text_validate()
            #on_text_validate: root.on_enter
            on_size: un_label.size = self.size
            on_text:root.check_upper()
        Label:
            text: 'Password'
            id: pw_label
            size: pw_input.size
        TextInput:
            id: pw_input
            password: True
            multiline: False
            on_size: pw_label.size = self.size
        Button:
            id: loginbutton
            text: "Enter the DBA Tool !"
            #on_press: self.text = check_password(un_input.text, pw_input.text)
            on_press: root.login_set_global()
                     # app.root.show_general_menu()
            #LoginPage.login_callback()
            #self.text = check_password(un_input.text, pw_input.text)
        Label:
            id: statuslogin
<MainView>:
    orientation: 'vertical'
    width: 800



<NewProjectForm>:
    BoxLayout:
        padding: 10,0,0,10
        orientation: 'vertical'
        id: newprojectform_id
        canvas.before:
            Color:
                rgba: 1,1,1,.5
            Rectangle:
                source:'rst/galaxy.jpg'
                pos: self.pos
                size: self.size
        Label:
            font_name: 'FreeMono'
            text: 'New Project Form'
            font_size: 15
            color: (0,.5,.9,1)
            size_hint_y: .2


        BoxLayout:
            size_hint: .8,.7
            pos: self.pos
            canvas:
                Color:
                    rgba: .5,.4,.6,.7

                Rectangle:
                    pos: self.pos
                    size: self.size

            orientation: 'vertical'

            GridLayout:
                cols: 2
                size_hint_x: .8
                padding: 0,10
                spacing: 5
                Label:
                    text: 'Project Title'
                    id: _newprojectlabel

                TextInput:
                    id: _newprojectid
                    multiline: False
                    text: 'Motor Mount Repair'
                    size_hint_y: None
                    height: 10
                    color: [0,0,0,.5]
                    on_text: root.ids._newprojectlabel.text = self.text
                    on_text_validate: root.check_user_exists(self.text); root.ids._projectcreationtime.text = datetime.datetime.fromtimestamp(time.time()).strftime('%Y-%m-%d %H:%M:%S')

                Label:
                    text: 'Project ID Number'
                TextInput:
                    id: _projectidnumber
                    size_hint_y: None
                    height: 20
                    multiline: False

                    active: False

                Label:
                    text: 'Project Created At'
                TextInput:
                    id: _projectcreatedat
                Label:
                    text: 'Project Creator'
                TextInput:
                    id: _projectcreator
                  #  text: PERSON
            BoxLayout:
                orientation: 'vertical'
                Button:
                    text: 'Set Global Project Paramter'
                    on_press: root.project_set_global(); root.ids._projectcreatedat.text = datetime.datetime.fromtimestamp(time.time()).strftime('%Y-%m-%d %H:%M:%S')
                    size_hint_x: 1
                Label:
                    id: _projectcreationtime
                    text: 'Today'

#
[AccordionItemTitle@Label]:
    text: ctx.title
    canvas.before:
        Color:
            rgb: 1, 0, 1
        BorderImage:
            source:
                ctx.item.background_normal \
                if ctx.item.collapse \
                else ctx.item.background_selected
            pos: self.pos
            size: self.size
        PushMatrix
        Translate:
            xy: self.center_x, self.center_y
        Rotate:
            angle: 90 if ctx.item.orientation == 'horizontal' else 0
            axis: 0, 0, 1
        Translate:
            xy: -self.center_x, -self.center_y
    canvas.after:
        PopMatrix


<ViewProjectFormTemplate>:
    min_space: 25

#: import DesignSolutionHelpContent Form1.DesignSolutionHelpContent
#: import Popup kivy.uix.popup.Popup
        ## ## Template for additional accordion item for design alternatives/solutions
#: import Poppy Form1.Poppy
     # on initial open of tab, ask to change title blah blah in popup. om exit. new accordion
#        title: 'Proposed Design Solution # 1'
#        on_collapse: Poppy().open()
    AccordionItem:
        id: _newsolution
        title: 'Create New Proposed Design Solution'
        canvas:
            Color:
                rgba: 1,.3,.2,.2

            Rectangle:
                size: self.x/2, self.y
                pos: (0,0)
        padding: 20,0,0,0
        BoxLayout:
            DesignSolutionHelpContent:
            DefineProposedDesignSolution:


    AccordionItem:

        title: 'Radar Chart'


        BoxLayout:
            size_hint: .9,.95
            pos_hint:  {'center_x': .5, 'center_y': .5}
            orientation: 'vertical'
            Label:
                size_hint_y: .2
                valign: 'top'
                text: 'Visualizing Design Solutions'
            DatetimePicker

#                density: 3
#                TimeFormatCyclicRoulette:
#                    density: 1

            Label:
                size_hint_y: .05
                color: [1,.6,.6,1]
                text: 'sdfsdf'
#                text: '[ref=some]What is a Radar Chart ? [/ref]'
                markup: True
                on_ref_press:
                    import webbrowser
                    webbrowser.open('http://en.wikipedia.org/wiki/Radar_chart')


    AccordionItem:
        id: _accitem_designrequire
        title: 'Design Requirements'
        ScreenManager:
            id: _sm
            Screen:
                id: _screenone
                Label:
                    text: 'You need to define the design requirements'
                Button:
                    text: 'Define Now'
                    on_press: _sm.current = 'screentwo';
            Screen:
                id: _screentwo
                name: 'screentwo'
                DefineDesignRequirements
                Button:
                    size_hint_y: .05
                    text: 'Submit All'
                    on_press: _sm.current = 'screenthree';

            Screen:
                name: 'screenthree'
                BoxLayout:
                    Label:
                        text: 'Here are Design requirement summary \nresults from user input'
                    Image:
                        source: 'example_radar.png'
                        #if all green then proceed
                    Button:
                        text: 'Edit Design\n Requirements'

#: import DatetimePicker kivy.garden.datetimepicker
#: import Menubar kivy.garden.menubar
<ProjectSolutionForm>:

<Poppy>:
    size_hint: .3,.2
    auto_dismiss: False
    title: 'Please enter a name for \nyour new design solution !'
    TextInput:
        text:''
        id: popupinput
        multiline: False
        on_text_validate: root.on_text_validate()
#:import rt Form1.RootHome
<ViewProject>:
    ViewProjectFormTemplate




<CustomDropDown@DropDown>:
    Button:
        text: 'My first Item'
        size_hint_y: None
        height: 44
        on_release: root.select('item1')
    Label:
        text: 'Unselectable item'
        size_hint_y: None
        height: 44
    Button:
        text: 'My second Item'
        size_hint_y: None
        height: 44
        on_release: root.select('item2')

<GeneralMenu@BoxLayout>:
    size_hint: .85, .85
    orientation: 'vertical'
    Words:
        size_hint_y: .95
    GridLayout:
        size_hint: 1,.5
        cols: 2
        Button:

            text: "Create New Project"
            on_press: app.root.show_new_project_form()

        Button:

            text: "Open Existing Project"
            on_press: app.root.show_project_view();
    MainView:



<AB@ActionBar>:
    pos_hint: {'top':1}
    ActionView:

        use_separator: True
        ActionPrevious:
            title: 'Action Bar'
            with_previous: False
        ActionOverflow:
        ActionButton:
            text: 'Btn0'
            icon: 'atlas://data/images/defaulttheme/audio-volume-high'
        ActionButton:
            text: 'Btn1'
            on_press: MyPageLayout
        ActionButton:
            text: 'Main Menu'
            on_press: root.current = 'MenuScreen'
        ActionButton:
            text: 'Btn3'
        ActionGroup:
            text: 'Current Project'
            mode: 'spinner'
            ActionButton:
                text: 'New Alternative'
            ActionButton:
                text: 'Modify Alternatives'
            ActionButton:
                text: 'View Report'
                on_press: app.root.show_report()
